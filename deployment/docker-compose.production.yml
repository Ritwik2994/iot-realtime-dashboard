version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: iot-mongodb-prod
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - iot-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand({ping: 1})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MQTT Broker (Mosquitto)
  mqtt-broker:
    image: eclipse-mosquitto:2.0
    container_name: iot-mqtt-broker-prod
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./deployment/config/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
      - mqtt_data:/mosquitto/data
      - mqtt_logs:/mosquitto/log
    networks:
      - iot-network
    healthcheck:
      test: ["CMD", "mosquitto_pub", "-h", "localhost", "-t", "test", "-m", "test"]
      interval: 30s
      timeout: 10s
      retries: 3

  # NestJS Backend
  backend:
    build:
      context: .
      dockerfile: deployment/docker/Dockerfile
    container_name: iot-backend-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      WS_PORT: ${WS_PORT:-3001}
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/${MONGO_DATABASE}?authSource=admin
      ALLOWED_DOMAINS: ${ALLOWED_DOMAINS}
      THROTTLE_TTL: ${THROTTLE_TTL:-60}
      THROTTLE_LIMIT: ${THROTTLE_LIMIT:-10}
      MQTT_BROKER_URL: mqtt://mqtt-broker:1883
      MQTT_CLIENT_ID: iot-dashboard-backend-prod
      MQTT_USERNAME: ${MQTT_USERNAME}
      MQTT_PASSWORD: ${MQTT_PASSWORD}
      HEALTH_MEMORY_HEAP_THRESHOLD: ${HEALTH_MEMORY_HEAP_THRESHOLD:-200}
      HEALTH_MEMORY_RSS_THRESHOLD: ${HEALTH_MEMORY_RSS_THRESHOLD:-500}
      HEALTH_DISK_THRESHOLD_PERCENT: ${HEALTH_DISK_THRESHOLD_PERCENT:-0.85}
      HEALTH_DISK_PATH: ${HEALTH_DISK_PATH:-/}
      HEALTH_HTTP_PING_URL: ${HEALTH_HTTP_PING_URL:-https://google.com}
      HEALTH_HTTP_TIMEOUT: ${HEALTH_HTTP_TIMEOUT:-5000}
      SERVER_SECRET: ${SERVER_SECRET}
      ACCESS_TOKEN_EXPIRATION_TIME: ${ACCESS_TOKEN_EXPIRATION_TIME:-3600}
      ENCRYPTION_KEY_32_BYTE: ${ENCRYPTION_KEY_32_BYTE}
      IV_KEY: ${IV_KEY}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      CORS_ORIGIN: ${CORS_ORIGIN}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "3000:3000"
    depends_on:
      mongodb:
        condition: service_healthy
      mqtt-broker:
        condition: service_healthy
    networks:
      - iot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # MQTT Simulator (Optional for production)
  mqtt-simulator:
    build:
      context: .
      dockerfile: deployment/docker/Dockerfile.simulator
    container_name: iot-mqtt-simulator-prod
    restart: unless-stopped
    environment:
      MQTT_BROKER_URL: mqtt://mqtt-broker:1883
      SIMULATION_INTERVAL: ${SIMULATION_INTERVAL:-5000}
    depends_on:
      mqtt-broker:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - iot-network
    profiles:
      - simulator

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: iot-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/config/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - iot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/nginx-health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local
  mqtt_data:
    driver: local
  mqtt_logs:
    driver: local

networks:
  iot-network:
    driver: bridge
